// Задание 3.
// На вход подается целое число N.
// Постройте матрицу N * N с элементами от 1 до N2 в спиральном порядке. Представить это как список списков.
// Решение 3.

<?php

function spiralMatrixOne(int $n) : array
{
    // cоздаем двумерный массив $matrix размером $n на $n, заполненный нулями
    $matrix = array();
    for ($i = 0; $i < $n; $i++) {
        $matrix[] = array_fill(0, $n, 0);
    }
    // устанавливаем переменные на границы матрицы
    $top = $left = 0;
    $bottom = $right = $n - 1;
    // устанавливаем начальное значение числа, которое мы будем записывать в ячейки матрицы
    $num = 1;
    // выполняем цикл, пока верхняя граница матрицы не достигла нижней
    // и левая граница матрицы не достигла правой
    while ($top <= $bottom && $left <= $right) {
        // заполняем верхнюю строку числами, начиная от $num
        // увеличиваем $top на 1, чтобы перейти к следующей строке
        for ($i = $left; $i <= $right; $i++) {
            $matrix[$top][$i] = $num;
            $num++;
        }
        $top++;

        // заполняем правый столбец
        for ($i = $top; $i <= $bottom; $i++) {
            $matrix[$i][$right] = $num;
            $num++;
        }
        $right--;
        // заполняем нижнюю строку
        for ($i = $right; $i >= $left; $i--) {
            $matrix[$bottom][$i] = $num;
            $num++;
        }
        $bottom--;
        // Заполняем левый столбец
        for ($i = $bottom; $i >= $top; $i--) {
            $matrix[$i][$left] = $num;
            $num++;
        }
        $left++;
    }

    return $matrix;
};

// а можно еще так (такой вариант написан и на Python)

function spiralMatrixTwo(int $N) : array
{
    // cоздаем двумерный массив $matrix размером $N на $N, заполненный нулями
    $matrix = array_fill(0, $N, array_fill(0, $N, 0));

    // задаем текущие координаты стартовой ячейки row, column
    // и параметры направления движения по матрице dir_row - смещение по строкам, dir_col - смещение по столбцам
    // изначально движение направо dir_col = 1
    $row = 0;
    $column = 0;
    $dir_row = 0;
    $dir_col = 1;

    // проходимся по числам от 1 до 9 и присваиваем это значение соответствующему элементу матрицы
    for ($k = 1; $k <= $N * $N; $k++) {
        $matrix[$row][$column] = $k;

        // проверяем, дошли ли мы до конца ряда, и необходимо ли сделать поворот
        // проверка выхода за пределы матрицы решается делением с остатком
        if ($matrix[($row + $dir_row + $N) % $N][($column + $dir_col + $N) % $N]) {
            list($dir_row, $dir_col) = array($dir_col, -$dir_row);
        }

        // если за пределы не вышли - задаем координаты следующей ячейки в соответствии с направлением смещения
        $row += $dir_row;
        $column += $dir_col;

    }

    return $matrix;
};

$n = 3;
$matrix1 = spiralMatrixOne($n);
$matrix2 = spiralMatrixTwo($n);
print_r($matrix1);
print_r($matrix2);